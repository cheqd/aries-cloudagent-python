 services:
  issuer:
    image: acapy-test
    ports:
      - "3001:3001"
    command: >
      start
        --label Issuer
        --inbound-transport http 0.0.0.0 3000
        --outbound-transport http
        --endpoint http://agency:3000
        --admin 0.0.0.0 3001
        --admin-insecure-mode
        --wallet-type askar-anoncreds
        --wallet-name agency
        --wallet-key insecure
        --auto-provision
        --log-level info
        --debug-webhooks
        --no-ledger
    healthcheck:
      test: curl -s -o /dev/null -w '%{http_code}' "http://localhost:3001/status/live" | grep "200" > /dev/null
      start_period: 30s
      interval: 7s
      timeout: 5s
      retries: 5
    depends_on:
      tails:
        condition: service_started

  holder:
    image: acapy-test
    ports:
      - "3002:3001"
    command: >
      start
        --label Holder
        --inbound-transport http 0.0.0.0 3000
        --outbound-transport http
        --endpoint http://holder:3000
        --admin 0.0.0.0 3001
        --admin-insecure-mode
        --wallet-type askar-anoncreds
        --wallet-name holder
        --wallet-key insecure
        --auto-provision
        --log-level info
        --debug-webhooks
        --no-ledger
    healthcheck:
      test: curl -s -o /dev/null -w '%{http_code}' "http://localhost:3001/status/live" | grep "200" > /dev/null
      start_period: 30s
      interval: 7s
      timeout: 5s
      retries: 5

  example:
    container_name: controller
    build:
      context: ../..
    environment:
      - ISSUER=http://issuer:3001
      - HOLDER=http://holder:3001
    volumes:
      - ./example.py:/usr/src/app/example.py:ro,z
    command: python -m example
    depends_on:
      agency:
        condition: service_healthy
      holder_anoncreds:
        condition: service_healthy


